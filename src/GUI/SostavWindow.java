package GUI;/*

import java.awt.*;
import javax.swing.*;
import javax.swing.GroupLayout;

import java.awt.*;
import javax.swing.*;
import javax.swing.GroupLayout;
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import ServiceLayer.LoginServ;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author homeguard
 */
public class SostavWindow extends javax.swing.JFrame {
    private LoginServ loginServ;
    /**
     * Creates new form sostav
     */
    private void backButtonActionPerformed(ActionEvent e) {
        this.dispose();
        MenuWindow menuWindow = new MenuWindow(loginServ);
        menuWindow.start();
    }

    private void switchButtonActionPerformed(ActionEvent e) {
        int selectedRow = table1.getSelectedRow();
        if (selectedRow < 0) {
            ModalDialog.showEror(this, "Select player");
            return;
        }

        if (!(Boolean)table1.getValueAt(selectedRow, 7)) {
            ModalDialog.showEror(this, "Select main player");
            return;
        }

        int playerID = (Integer)table1.getValueAt(selectedRow, 0);
        this.dispose();
        SwitchPlayerWindow switchPlayerWindow = new SwitchPlayerWindow(loginServ, playerID);
        switchPlayerWindow.start();
    }

    private void healthButtonActionPerformed(ActionEvent e) {
        int selectedRow = table1.getSelectedRow();
        if (selectedRow < 0) {
            ModalDialog.showEror(this, "Select player");
            return;
        }
        int playerID = (Integer)table1.getValueAt(selectedRow, 0);
        int res = ModalDialog.showQuestion(this, "Switch player health?");
        if (res == 0) {
            loginServ.switchPlayerHealth(playerID);
            ModalDialog.showComplete(this, "Health switched");
        }
    }

    public SostavWindow(LoginServ loginServ) {
        this.loginServ = loginServ;
        initComponents();
        if (!loginServ.isAdmin()) {
            healthButton.setEnabled(false);
            switchButton.setEnabled(false);
        }
    }

    //loginServ.getPlayers(),
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Anton Vsegda
    private void initComponents() {
        jScrollPane1 = new JScrollPane();
        table1 = new JTable();
        backButton = new JButton();
        label1 = new JLabel();
        switchButton = new JButton();
        healthButton = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        Container contentPane = getContentPane();

        //======== jScrollPane1 ========
        {

            //---- table1 ----
            table1.setModel(new DefaultTableModel(
                    loginServ.getPlayers(),
                new String[] {
                    "id", "\u0418\u043c\u044f \u0418\u0433\u0440\u043e\u043a\u0430", "\u0421\u0442\u0440\u0430\u043d\u0430", "\u041f\u043e\u0437\u0438\u0446\u0438\u044f", "\u0420\u0435\u0439\u0442\u0438\u043d\u0433", "\u041f\u0440\u0430\u0432\u0448\u0430", "\u0417\u0434\u043e\u0440\u043e\u0432", "\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u043e\u0441\u0442\u0430\u0432"
                }
            ) {
                Class<?>[] columnTypes = new Class<?>[] {
                    Integer.class, String.class, String.class, String.class, Integer.class, Boolean.class, Boolean.class, Boolean.class
                };
                boolean[] columnEditable = new boolean[] {
                    true, false, false, false, false, false, false, false
                };
                @Override
                public Class<?> getColumnClass(int columnIndex) {
                    return columnTypes[columnIndex];
                }
                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return columnEditable[columnIndex];
                }
            });
            jScrollPane1.setViewportView(table1);
        }

        //---- backButton ----
        backButton.setText("\u043d\u0430\u0437\u0430\u0434");
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                backButtonActionPerformed(e);
            }
        });

        //---- label1 ----
        label1.setText("\u0421\u043e\u0441\u0442\u0430\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b");

        //---- switchButton ----
        switchButton.setText("\u0417\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u0433\u0440\u043e\u043a\u0430");
        switchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                switchButtonActionPerformed(e);
            }
        });

        //---- healthButton ----
        healthButton.setText("\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435");
        healthButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                healthButtonActionPerformed(e);
            }
        });

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addGroup(contentPaneLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 833, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 25, Short.MAX_VALUE))
                            .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                                    .addGap(0, 324, Short.MAX_VALUE)
                                    .addComponent(switchButton, GroupLayout.PREFERRED_SIZE, 202, GroupLayout.PREFERRED_SIZE)
                                    .addGap(99, 99, 99)
                                    .addComponent(healthButton, GroupLayout.PREFERRED_SIZE, 189, GroupLayout.PREFERRED_SIZE)
                                    .addGap(64, 64, 64))
                            .addGroup(contentPaneLayout.createSequentialGroup()
                                    .addComponent(backButton)
                                    .addGap(153, 153, 153)
                                    .addComponent(label1, GroupLayout.PREFERRED_SIZE, 191, GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(467, Short.MAX_VALUE))))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(backButton)
                        .addComponent(label1))
                    .addGap(26, 26, 26)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(switchButton)
                                .addComponent(healthButton))
                        .addGap(48, 48, 48))
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    public void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SostavWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SostavWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SostavWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SostavWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SostavWindow(loginServ).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Anton Vsegda
    private JScrollPane jScrollPane1;
    private JTable table1;
    private JButton backButton;
    private JLabel label1;
    private JButton switchButton;
    private JButton healthButton;
    // End of variables declaration//GEN-END:variables
}
