package GUI;/*

import java.awt.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;

import java.awt.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import ServiceLayer.LoginServ;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author homeguard
 */
public class SwitchPlayerWindow extends javax.swing.JFrame {
    private LoginServ loginServ;
    private int playerID;
    /**
     * Creates new form player
     */
    private void backButtonActionPerformed(ActionEvent e) {
        this.dispose();
        SostavWindow sostavWindow = new SostavWindow(loginServ);
        sostavWindow.start();
    }

    private void switchButtonActionPerformed(ActionEvent e) {
        int selectedRow = table1.getSelectedRow();
        if (selectedRow < 0) {
            ModalDialog.showEror(this, "Select player");
            return;
        }
        int newPlayerID = (Integer)table1.getValueAt(selectedRow, 0);
        loginServ.updatePlayer(playerID, newPlayerID);
        ModalDialog.showComplete(this, "Switched");
    }

    public SwitchPlayerWindow(LoginServ loginServ, int playerID) {
        this.playerID = playerID;
        this.loginServ = loginServ;
        initComponents();
    }
    //loginServ.getPLayersToSwitch(playerID),
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Anton Vsegda
    private void initComponents() {
        backButton = new JButton();
        switchButton = new JButton();
        jScrollPane1 = new JScrollPane();
        table1 = new JTable();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        Container contentPane = getContentPane();

        //---- backButton ----
        backButton.setText("\u043d\u0430\u0437\u0430\u0434");
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                backButtonActionPerformed(e);
            }
        });

        //---- switchButton ----
        switchButton.setText("\u0437\u0430\u043c\u0435\u043d\u0430");
        switchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                switchButtonActionPerformed(e);
            }
        });

        //======== jScrollPane1 ========
        {

            //---- table1 ----
            table1.setModel(new DefaultTableModel(
                loginServ.getPLayersToSwitch(playerID),
                new String[] {
                    "id", "\u0418\u043c\u044f \u0438\u0433\u0440\u043e\u043a\u0430", "\u0420\u0435\u0439\u0442\u0438\u043d\u0433"
                }
            ) {
                Class<?>[] columnTypes = new Class<?>[] {
                    Integer.class, String.class, Integer.class
                };
                boolean[] columnEditable = new boolean[] {
                    false, false, false
                };
                @Override
                public Class<?> getColumnClass(int columnIndex) {
                    return columnTypes[columnIndex];
                }
                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return columnEditable[columnIndex];
                }
            });
            jScrollPane1.setViewportView(table1);
        }

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addComponent(backButton)
                            .addContainerGap())
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(switchButton, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32))))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(backButton)
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGap(86, 86, 86)
                            .addComponent(switchButton, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 191, GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(15, Short.MAX_VALUE))
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    public void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SwitchPlayerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SwitchPlayerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SwitchPlayerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SwitchPlayerWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SwitchPlayerWindow(loginServ, playerID).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Anton Vsegda
    private JButton backButton;
    private JButton switchButton;
    private JScrollPane jScrollPane1;
    private JTable table1;
    // End of variables declaration//GEN-END:variables
}
